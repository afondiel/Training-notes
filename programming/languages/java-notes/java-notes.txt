
=========================== JAVA NOTES ==========================

# Definition : OOP (Object Orient Program) => variables/attributes + Operations/Functions

## variables : 



## Operations : Getter vs setter

way to access and modify an attribute:
        

-setBalance(): WRITE
-getBalance(): READ

##  Class vs Object :  ? 

I execute the object type method at runtime
//super: parent class
//this?? : daughter class

## instance = creation of an empty object by an affection

class: Student{}
Student myStudent = new Student(); // instantiation

attribute(vars of type private) = atomic!!!!


# Abstraction
process of displaying only required information to the user by hiding other details

# Encapsulation
-private
-audience
-protected(visible to inheritors)

# Heritage

an object a(parent) can take b

a class b inheriting from a is greater than a. ie !(a <= b) but /!\ b<=a


# Polymorphisme (static & dynamic) => Java Revolution !!!

Evolution and reuse of the object during its development



# References : 
wiki : https://en.wikibooks.org/wiki/Java_Programming
https://en.wikipedia.org/wiki/Java_(programming_language)
https://www.oracle.com/java/
https://www.java.com/en/

